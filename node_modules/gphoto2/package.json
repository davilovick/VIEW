{
  "_args": [
    [
      {
        "raw": "davilovick/node-gphoto2",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "davilovick/node-gphoto2",
        "spec": "github:davilovick/node-gphoto2",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:davilovick/node-gphoto2.git",
          "sshUrl": "git+ssh://git@github.com/davilovick/node-gphoto2.git",
          "httpsUrl": "git+https://github.com/davilovick/node-gphoto2.git",
          "gitUrl": "git://github.com/davilovick/node-gphoto2.git",
          "shortcut": "github:davilovick/node-gphoto2",
          "directUrl": "https://raw.githubusercontent.com/davilovick/node-gphoto2/master/package.json"
        }
      },
      "/home/davilovick/Documents/NodeJS/TestJpegLum"
    ]
  ],
  "_from": "davilovick/node-gphoto2",
  "_id": "gphoto2@0.1.7",
  "_inCache": true,
  "_location": "/gphoto2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "davilovick/node-gphoto2",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "davilovick/node-gphoto2",
    "spec": "github:davilovick/node-gphoto2",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:davilovick/node-gphoto2.git",
      "sshUrl": "git+ssh://git@github.com/davilovick/node-gphoto2.git",
      "httpsUrl": "git+https://github.com/davilovick/node-gphoto2.git",
      "gitUrl": "git://github.com/davilovick/node-gphoto2.git",
      "shortcut": "github:davilovick/node-gphoto2",
      "directUrl": "https://raw.githubusercontent.com/davilovick/node-gphoto2/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git://github.com/davilovick/node-gphoto2.git#835d68a81a1d6d5526fa1ed165d111142e891dbe",
  "_shasum": "31b4b92c9ea1b06aa92240c9233433a8ceeb0ad7",
  "_shrinkwrap": null,
  "_spec": "davilovick/node-gphoto2",
  "_where": "/home/davilovick/Documents/NodeJS/TestJpegLum",
  "author": {
    "name": "Leonhardt Wille",
    "email": "wille@riverlabs.de"
  },
  "bugs": {
    "url": "https://github.com/lwille/node-gphoto2/issues"
  },
  "contributors": [
    {
      "name": "Leonhardt Wille",
      "email": "wille@riverlabs.de",
      "url": "https://github.com/lwille"
    },
    {
      "name": "Aaron Israel",
      "email": "ai@gobas.de",
      "url": "https://github.com/a0n"
    },
    {
      "name": "Luigi Pinca",
      "email": "luigipinca@gmail.com",
      "url": "https://github.com/lpinca"
    },
    {
      "name": "Michael Kötter",
      "email": "michael@m-koetter.de",
      "url": "https://github.com/michaelkoetter"
    },
    {
      "name": "david noelte",
      "email": "noelte@csb-doebeln.de",
      "url": "https://github.com/marvin"
    },
    {
      "name": "Brian White",
      "email": "mscdex@mscdex.net",
      "url": "https://github.com/mscdex"
    }
  ],
  "dependencies": {
    "nan": "^2.5.1"
  },
  "description": "Node.js wrapper for libgphoto2",
  "devDependencies": {
    "async": "^0.2.10",
    "coffee-script": "^1.7.1",
    "express": "^3.1.2",
    "jade": "^0.28.2",
    "mocha": "^1.9.0",
    "pre-commit": "^0.0.8",
    "should": "^1.2.2",
    "sinon": "^1.6.0",
    "superagent": "^0.14.9",
    "underscore": "^1.4.4"
  },
  "gitHead": "835d68a81a1d6d5526fa1ed165d111142e891dbe",
  "homepage": "https://github.com/lwille/node-gphoto2",
  "license": "MIT",
  "main": "index.js",
  "name": "gphoto2",
  "optionalDependencies": {},
  "os": [
    "darwin",
    "linux"
  ],
  "pre-commit": [
    "cpplint"
  ],
  "readme": "# node-gphoto2\n\n[![Build Status](https://travis-ci.org/lwille/node-gphoto2.svg?branch=master)](https://travis-ci.org/lwille/node-gphoto2)\n[![NPM version](https://badge.fury.io/js/gphoto2.svg)](http://badge.fury.io/js/gphoto2)\n\nA Node.js wrapper for [libgphoto2](http://www.gphoto.org). Useful for remote controlling of DSLRs and other digital cameras supported by [gphoto2](http://www.gphoto.org).\n\nThe included test application currently allows you to\n\n* receive a live preview of your camera (if supported). Tested with an EOS 550D on a 2010 iMac at ~17 fps using Chrome (Safari doesn't work and FF is slow as hell).\n* query a list of available configuration options\n* query the values of specific configuration options\n\nThe test suite can be run using `npm test`. There's also a small test application in `test/test-server.coffee` which runs on `http://localhost:1337` and allows to change camera settings and to\ntake pictures.\n\n## Prerequisites\n\n* Node.js Any version supported by nan\n* NPM ~1.2.15\n* Nan v2.5.1 \n* libgphoto2 ~2.5.x - via `brew install libgphoto2`, `apt-get install libgphoto2-dev` or download and build from http://www.gphoto.org/proj/libgphoto2/\n* pkg-config | dpkg (used for dependency checking)\n* clang compiler\n\n## Test/dev prerequisites\n\n* async\n* coffee-script\n* mocha\n* pre-commit\n* should\n* sinon\n* superagent\n\n## Test-server prerequisites\n\n* express\n* jade\n* underscore\n\n## Installation\n\nAfter installing the dependencies, just install using:\n\n```\nnpm install gphoto2\n```\n\nIf it fails, please thoroughly check the output - link errors usually indicate missing dependencies.\nAlso, the script tries to detect wether libgphoto2 is correctly installed - if this check fails although you properly installed it, please report :)\n\n## Usage\n\nThis example only shows how to achieve certain tasks, it's not meant to be executed without any asynchronous control flow logic.\n\n```javascript\nvar gphoto2 = require('gphoto2');\nvar GPhoto = new gphoto2.GPhoto2();\nvar fs = require('fs');\n\n\nGPhoto.on('log', function(level, err_name, err_msg){ \n\tconsole.log(err_name, err_msg); \n})\n//Negative value or undefined will disable logging, levels 0-4 enable it.\nGPhoto.setLogLevel(1); \n\n// List cameras / assign list item to variable to use below options\nGPhoto.list(function (list) {\n  if (list.length === 0) return;\n  var camera = list[0];\n  console.log('Found', camera.model);\n\n  // get configuration tree\n  camera.getConfig(function (er, settings) {\n    console.log(settings);\n  });\n\n  // Set configuration values\n  camera.setConfigValue('capturetarget', 1, function (er) {\n    //...\n  });\n\n  // Take picture with camera object obtained from list()\n  camera.takePicture({download: true}, function (er, data) {\n    fs.writeFileSync(__dirname + '/picture.jpg', data);\n  });\n\n  // Take picture without downloading immediately\n  camera.takePicture({download: false}, function (er, path) {\n    console.log(path);\n  });\n\n  // Take picture and download it to filesystem\n  camera.takePicture({\n    targetPath: '/tmp/foo.XXXXXX'\n  }, function (er, tmpname) {\n    fs.renameSync(tmpname, __dirname + '/picture.jpg');\n  });\n\n  // Download a picture from camera\n  camera.downloadPicture({\n    cameraPath: '/store_00020001/DCIM/100CANON/IMG_1231.JPG',\n    targetPath: '/tmp/foo.XXXXXX'\n  }, function (er, tmpname) {\n    fs.renameSync(tmpname, __dirname + '/picture.jpg');\n  });\n\n  // Get preview picture (from AF Sensor, fails silently if unsupported)\n  camera.takePicture({\n    preview: true,\n    targetPath: '/tmp/foo.XXXXXX'\n  }, function (er, tmpname) {\n    fs.renameSync(tmpname, __dirname + '/picture.jpg');\n  });\n});\n```\n\n## Versioning\n\nThis project uses [Semantic versioning](https://github.com/mojombo/semver).\n\n## Contributors\n\n* [Brian White](https://github.com/mscdex)\n* [David Noelte](https://github.com/marvin)\n* [Leonhardt Wille](https://github.com/lwille)\n* [Luigi Pinca](https://github.com/lpinca)\n* [Michael Kötter](https://github.com/michaelkoetter)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/lwille/node-gphoto2.git"
  },
  "scripts": {
    "cpplint": "util/cpplint.sh",
    "preinstall": "((which pkg-config && pkg-config libgphoto2) || (which dpkg && (dpkg -s libgphoto2-dev || dpkg -s libgphoto2-6-dev)) || (which brew && brew list libgphoto2) || (echo 'ERROR: libgphoto2 seems not to be installed.' 1>&2; exit 1)) && node-gyp rebuild",
    "prepublish": "npm run cpplint",
    "test": "node_modules/mocha/bin/mocha"
  },
  "version": "0.1.7"
}
